name: Terraform Apply

on:
  push:
    branches:
      - main
permissions:
  contents: read
  issues: write
  pull-requests: write
  statuses: write
  checks: write
  deployments: write
  security-events: write

  
jobs:
  Linting-Tool:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Run TFLint and create SARIF
        run: |
            tflint --init
            tflint | tee /tmp/tflint.log
            tflint --format sarif > tflint-results.sarif || true

          # Upload the SARIF report
      - name: Upload SARIF to GitHub Security tab
        uses: advanced-security/github-code-scanning-upload@v1
        with:
            sarif_file: tflint-results.sarif
            token: ${{ secrets.GITHUB_TOKEN }}




  terraform-plan-apply:
    runs-on: ubuntu-latest
    # environment: production  # ðŸ‘ˆ Manual approval happens here
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      # Optional: Download plan artifact if generated in 'Terraform Plan'
      - name: Terraform validate
        run: terraform validate


      - name: Terraform tf-Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
